{"version":3,"sources":["redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","navigation/navigationBar.jsx","components/boardHeader.jsx","components/ListTitle.jsx","components/Card.jsx","components/addCard.jsx","components/Cards.jsx","components/List.jsx","components/Lists.jsx","server/axiosConfig.js","redux/actions/getActions.js","App.js","redux/actions/changeActions.js","index.js"],"names":["GET_LISTS","POST_LIST","DELETE_LIST","UPDATE_LIST","GET_CARDS","POST_CARD","DELETE_CARD","UPDATE_CARD","GET_ERRORS","initialState","lists","cards","combineReducers","getReducers","state","action","type","console","log","payload","changeReducers","filter","list","card","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","subscribe","getState","NavBar","class","aria-label","aria-hidden","BoardHeader","props","handleModal","ListTitle","listName","editingList","handleEditList","listId","showEditList","currentEditList","handleListChange","currentNewListName","className","onChange","onClick","e","preventDefault","Card","cardName","cardId","handleDeleteCard","handleEditCard","originalCardId","showEditCard","editingCard","currentNewCardName","handleCardChange","currentEditCardList","currentEditCard","currentCardId","currentListId","AddCard","showAddCard","addingCard","handleAddCard","lastCardId","lastPosition","currentAddList","Cards","currentCardState","currentCardStack","i","length","list_id","push","position","card_id","map","_id","card_name","List","handleDeleteList","listPosition","Lists","newListId","handleAddList","listIds","forEach","listElement","list_name","list_position","app","axios","create","baseURL","interceptors","response","use","error","err","get","Promise","reject","message","getLists","dispatch","then","res","listsArray","data","currentObject","catch","getCards","cardsArray","currentCardGroup","currentCards","_cards","App","currentEditCardName","showModal","onGetCards","bind","onGetLists","this","addList","deleteList","newName","editList","newCardName","addCard","deleteCard","newCardTitle","editCard","setState","event","target","value","React","Component","connect","delete","params","post","listTitle","patch","cardTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b667577c.chunk.js","sourcesContent":["export const GET_BOARDS = 'GET_BOARDS';\n\nexport const GET_LISTS = 'GET_LISTS';\nexport const POST_LIST = 'POST_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const MOVE_LIST = 'MOVE_LIST';\n\nexport const GET_CARDS = 'GET_CARDS';\nexport const POST_CARD = 'POST_CARD';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_CARD = 'UPDATE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\n\nexport const GET_ERRORS = 'GET_ERRORS';","import { auto } from 'async';\nimport { combineReducers } from 'redux';\nimport { GET_LISTS, DELETE_LIST, POST_LIST, UPDATE_LIST, UPDATE_CARD, GET_CARDS, POST_CARD, DELETE_CARD } from '../actions/index.js';\n\nexport const initialState = {\n    lists: [],\n    cards: []\n}\n\nexport function getReducers (state = initialState, action) {\n    switch (action.type){\n        case GET_LISTS: \n            console.log(action.payload, 'line 1432432')\n            return {\n                ...state,\n                lists: action.payload\n            };\n        case GET_CARDS:\n            console.log(action.payload, 'line 14')\n            return {\n                ...state,\n                cards: action.payload\n            }\n\n        default: return state;\n    }\n}\n\nexport function changeReducers (state = initialState, action) {\n    switch (action.type){\n        case DELETE_LIST:\n            return {\n                ...state,\n                lists: state.lists.filter(list => list !== action.payload)\n            };\n\n        case POST_LIST:\n            return {\n                ...state,\n                lists: state.lists\n            };\n        \n        case UPDATE_LIST:\n            return {\n                ...state,\n                lists: state.lists\n            };\n        \n        case POST_CARD:\n            return {\n                ...state,\n                cards: state.cards\n            }\n        \n        case DELETE_CARD:\n            return {\n                ...state,\n                cards: state.cards.filter(card => card !== action.payload)\n            }\n\n        case UPDATE_CARD:\n            return {\n                ...state,\n                cards: state.cards\n            }\n\n        default: return state;\n    }\n}\n\n\nexport default combineReducers({\n    getReducers, changeReducers\n})\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index.js';\nimport promise from 'redux-promise-middleware';\nimport throttle from 'lodash/throttle';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n// const persistedState = loadState();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nstore.subscribe(() => {\n  console.log('state updated:', store.getState())\n})\n\nexport default store;","// import LeftNavBar from './leftNavigationBar.jsx';\n// import RightNavBar from './rightNavigationBar.jsx';\n\nconst NavBar = () => {\n\n    return (\n        <header class=\"tophead\">\n\t<div class=\"boards-menu\">\n\t\t<button class=\"boards-btn btn\"><i class=\"fab fa-trello boards-btn-icon\"></i>Boards</button>\n\t\t<div class=\"board-search\">\n\t\t\t<input type=\"search\" class=\"board-search-input\" aria-label=\"Board Search\"/>\n\t\t\t<i class=\"fas fa-search search-icon\" aria-hidden=\"true\"></i>\n\t\t</div>\n\n\t</div>\n\t<div class=\"logo\">\n\t\t<h1><i class=\"fab fa-trello logo-icon\" aria-hidden=\"true\"></i>Trello</h1>\n\t</div>\n\n\t<div class=\"user-settings\">\n\n\t\t<button class=\"user-settings-btn btn\" aria-label=\"Create\">\n\t\t\t<i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n\t\t</button>\n\n\t\t<button class=\"user-settings-btn btn\" aria-label=\"Information\">\n\t\t\t<i class=\"fas fa-info-circle\" aria-hidden=\"true\"></i>\n\t\t</button>\n\n\t\t<button class=\"user-settings-btn btn\" aria-label=\"Notifications\">\n\t\t\t<i class=\"fas fa-bell\" aria-hidden=\"true\"></i>\n\t\t</button>\n\n\t\t<button class=\"user-settings-btn btn\" aria-label=\"User Settings\">\n\t\t\t<i class=\"fas fa-user-circle\" aria-hidden=\"true\"></i>\n\t\t</button>\n\n\t</div>\n\n</header>\n    )\n}\n\nexport default NavBar;\n","import react from 'react';\n\nconst BoardHeader = (props) => {\n    let {handleModal} = props;\n\n    return (\n       <div>\n         <section class=\"board-info-bar\">\n          <div class=\"board-controls\">\n\n            <button class=\"board-title btn\">\n              <h2>Trello Board</h2>\n            </button>\n            <button class=\"star-btn btn\" aria-label=\"Star Board\">\n              <i class=\"far fa-star\" aria-hidden=\"true\"></i>\n            </button>\n\n            <button class=\"personal-btn btn\">Personal</button>\n\n            <button class=\"private-btn btn\"><i class=\"fas fa-briefcase private-btn-icon\" aria-hidden=\"true\"></i>Private</button>\n\n          </div>\n\n          <button class=\"menu-btn btn\"><i class=\"fas fa-ellipsis-h menu-btn-icon\" aria-hidden=\"true\"></i>Show Menu</button>\n      \n\n          </section>\n       </div>\n    )\n}\n\nexport default BoardHeader;","const ListTitle = (props) => {\n\n    let {listName, editingList, handleEditList, listId, showEditList, currentEditList, handleListChange, currentNewListName} = props;\n\n    let handleClickEdit = (e) => {\n        e.preventDefault();\n        console.log('List Name was selected');\n        let newTitle = currentNewListName;\n        handleEditList(listId, newTitle);\n        showEditList(listId);\n    }\n\n    let editListHandler = () => {\n        console.log(listId, 'line 13')\n        showEditList(listId)\n    }\n\n\n    return (\n        <div>\n            {\n                editingList && (currentEditList === listId)?\n                <div className=\"submit-container\">\n                    <input className=\"submit-input\" type=\"text\" onChange={handleListChange} />\n                    <button class=\"submit-btn btn\" onClick={handleClickEdit}>Submit</button>\n                </div>\n                    :\n                <div className=\"list-title\" onClick={editListHandler}>\n                   {listName}\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ListTitle;\n\n","const Card = (props) => {\n    let {cardName, cardId, listId, handleDeleteCard, originalCardId, handleEditCard, showEditCard, editingCard, currentNewCardName, handleCardChange, currentEditCardList, currentEditCard} = props;\n\n    let deleteClickHandler = (currentCardId, currentListId) => {\n        handleDeleteCard(cardId, listId);\n    }\n\n    let editCardSubmitter = (e) => {\n        e.preventDefault();\n        console.log('Card Name was selected');\n        let newCardTitle = currentNewCardName;\n        handleEditCard(cardId, listId, newCardTitle);\n        showEditCard(listId, cardId)\n    }\n\n    let editCardHandler = () => {\n        showEditCard(listId, cardId);\n    }\n\n    return (\n        <div className=\"single-card\">\n            {\n                editingCard && (currentEditCardList === listId) && (currentEditCard === cardId)? \n                <div className=\"submit-container-card\">\n                    <input className=\"submit-input\" type=\"text\" onChange={handleCardChange}/>\n                    <button class=\"submit-btn btn\" onClick={editCardSubmitter}>Submit</button>\n                </div>\n                    :\n                    <div onClick={editCardHandler}>\n                        {cardName}\n                    <button type=\"button\" class=\"btn-close float-end\" aria-label=\"Close\" onClick={deleteClickHandler}></button>\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default Card;\n","const AddCard = (props) => {\n\n    let {showAddCard, addingCard, handleAddCard, listId, lastCardId, lastPosition, currentAddList, currentNewCardName, handleCardChange} = props;\n\n    let handleAnotherCard = (e) => {\n        let newCardName = currentNewCardName;\n        handleAddCard(listId, lastCardId, lastPosition, newCardName);\n        showAddCard(listId)\n    }\n\n    let addCardHandler = () => {\n        showAddCard(listId);\n    }\n    \n    \n    return (\n        <div>\n            {\n                addingCard && (currentAddList === listId)?\n                <div className=\"submit-container-add-card\">\n                    <input className=\"submit-input\" type=\"text\" onChange={handleCardChange}/>\n                    <button class=\"submit-btn btn\" onClick={handleAnotherCard}>Submit</button>\n                </div>\n                    :\n                <button class=\"add-card-btn btn\" onClick={addCardHandler}>Add a card</button>\n            }\n        </div>\n    )\n}\n\nexport default AddCard;","import { last } from 'lodash';\nimport store from '../redux/store/index.js';\nimport Card from './Card.jsx';\nimport AddCard from './addCard.jsx';\n\nconst Cards = (props) => {\n    let {listId, handleAddCard, handleDeleteCard, handleEditCard, showEditCard, editingCard, showAddCard, addingCard, currentAddList, currentNewCardName, handleCardChange, currentEditCardList, currentEditCard} = props;\n    let currentCardState = store.getState().getReducers.cards;\n\n    let currentCardStack = [];\n\n    for (let i = 0; i < currentCardState.length; i++) {\n        if (currentCardState[i][0].list_id === listId) {\n            currentCardStack.push(currentCardState[i]);\n        } \n    }\n\n    let lastPosition = 0;\n    let lastCardId = 0;\n\n    if (currentCardStack.length > 0) {\n        lastPosition = currentCardStack[currentCardStack.length - 1][0].position;\n        lastCardId = currentCardStack[currentCardStack.length - 1][0].card_id;\n    }\n    \n    return (\n        <div>\n            <div>\n                {\n                    currentCardStack.map((card) => {\n                        return <Card cardId={card[0].card_id} originalCardId={card[0]._id} cardName={card[0].card_name} listId={listId} handleDeleteCard={handleDeleteCard} handleEditCard={handleEditCard} showEditCard={showEditCard} editingCard={editingCard} handleCardChange={handleCardChange} currentNewCardName={currentNewCardName} currentEditCardList={currentEditCardList} currentEditCard={currentEditCard}/>\n                    })\n                }\n            </div>\n            <div>\n                <AddCard showAddCard={showAddCard} addingCard={addingCard} handleAddCard={handleAddCard} listId={listId} lastCardId={lastCardId} lastPosition={lastPosition} currentAddList={currentAddList} currentNewCardName={currentNewCardName} handleCardChange={handleCardChange}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards;","import ListTitle from './ListTitle.jsx';\nimport Cards from './Cards.jsx';\n\nconst List = (props) => {\n    let {listName, listId, listPosition, handleDeleteList, handleEditList, handleAddCard, handleDeleteCard, handleEditCard, editingList, showEditList, showEditCard, editingCard, showAddCard, addingCard, currentAddList, currentNewCardName, handleCardChange, currentEditList, handleListChange, currentNewListName, currentEditCardList, currentEditCard} = props;\n\n    let currentListId = listId;\n\n    let onClickHandler = (listId) => {\n        handleDeleteList(currentListId);\n    }\n\n    return (\n        <div className=\"single-list\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <header>\n                        <div>\n                            <div class=\"float-start\">\n                                <ListTitle listName={listName} editingList={editingList} handleEditList={handleEditList} listId={listId} currentEditList={currentEditList} showEditList={showEditList} handleListChange={handleListChange} currentNewListName={currentNewListName}/>\n                            </div>\n                            <button type=\"button\" class=\"btn-close float-end\" aria-label=\"Close\" onClick={onClickHandler}></button>\n                        </div>\n                    </header>\n                </div>\n            </div>\n            <Cards listId={listId} handleAddCard={handleAddCard} handleDeleteCard={handleDeleteCard} handleEditCard={handleEditCard} showEditCard={showEditCard} editingCard={editingCard} showAddCard={showAddCard} addingCard={addingCard} currentAddList={currentAddList} currentNewCardName={currentNewCardName} handleCardChange={handleCardChange} currentEditCardList={currentEditCardList} currentEditCard={currentEditCard}/>\n        </div>\n    )\n}\n\nexport default List;","import react from 'react';\nimport List from './List.jsx';\nimport store from '../redux/store/index.js';\n\nconst Lists = (props) => {\n    let { lists, handleDeleteList, handleAddList, handleEditList, handleAddCard, handleDeleteCard, handleEditCard, editingList, showEditList, showEditCard, editingCard, showAddCard, addingCard, currentAddList, currentNewCardName, handleCardChange, currentEditList, handleListChange, currentNewListName, currentEditCardList, currentEditCard} = props;\n    let currentLists = store.getState().getReducers.lists;\n\n    if (currentLists.length > 0) {\n        lists = store.getState().getReducers.lists;\n    }\n\n    let newListId;\n\n    if (lists.length === 0) {\n        newListId = 1;\n    } else {\n        newListId = lists[lists.length - 1][\"list_id\"] + 1;\n    }\n\n    if (lists.length > 0) {\n        let listIds = [];\n        lists.forEach(list => {\n            listIds.push(list.list_id);\n        })\n    }\n\n    let onClickHandler = (listId) => {\n        handleAddList(newListId);\n    }\n\n\n    return (\n        <div>\n            <ul>\n                <div className=\"flex-container\">\n                    {\n                        lists.map((listElement) => {\n                            return <List listName={listElement.list_name} listId={listElement.list_id} listPosition={listElement.list_position} handleDeleteList={handleDeleteList} handleEditList={handleEditList} handleAddCard={handleAddCard} handleDeleteCard={handleDeleteCard} handleEditCard={handleEditCard} showEditList={showEditList} editingList={editingList} showEditCard={showEditCard} editingCard={editingCard} showAddCard={showAddCard}addingCard={addingCard} currentAddList={currentAddList} currentNewCardName={currentNewCardName} handleCardChange={handleCardChange} currentEditList={currentEditList} handleListChange={handleListChange} currentNewListName={currentNewListName} currentEditCardList={currentEditCardList} currentEditCard={currentEditCard}/>\n                        })\n                    }\n                    <div className =\"list-container\">\n                        <button onClick={onClickHandler} class=\"add-list-btn btn\">Add a list</button>\n                    </div>\n                </div>\n            </ul>\n        </div>\n    )\n}\n\nexport default Lists;","import get from \"lodash/get\";\nimport axios from \"axios\";\n\n// the baseURL should to point to localhost in development\n// and your domain in production\nconst app = axios.create({\n  // baseURL: process.env.NODE_ENV === inDevelopment\n  //   ? `http://localhost:5000/api/`\n  //   : \"http://example.com\",\n  baseURL: \"http://localhost:3001/\"\n});\n\n// axios consumes rejected API responses by default,\n// so the configuration below intercepts the those\n// responses and passes them down to the function that\n// uses our custom \"app\" axios configuration.\napp.interceptors.response.use(\n  response => response,\n  error => {\n    const err = get(error, [\"response\", \"data\", \"err\"]);\n\n    // \"err\" refers to the response returned from the API when\n    // a response is rejected. \"err\" can be named anything, but it\n    // must be consistent across all your API routes (for example, see\n    // anarchive/routes/api => verify route => \"catch\" sends the \"err\")\n    return Promise.reject(err ? err : error.message);\n  }\n);\n\nexport default app;","// import axios from 'axios';\nimport { GET_LISTS, GET_CARDS, GET_ERRORS } from './index.js';\nimport store from '../store/index.js';\nimport axios from '../../server/axiosConfig.js';\n\nexport const getLists = () => dispatch => {\n    axios.get(`/lists`)\n        .then((res) => {\n            let listsArray = [];\n            for (let i = 0; i < res.data.length; i++) {\n                let currentObject = {};\n                currentObject.list_id = res.data[i].list_id;\n                currentObject.list_name = res.data[i].list_name;\n                currentObject.position = res.data[i].position;\n                listsArray.push(currentObject);\n            }\n            dispatch({\n                type: GET_LISTS,\n                payload: listsArray\n            })\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            })\n        );\n}\n\nexport const getCards = () => dispatch => {\n    axios.get(`/cards`)\n        .then(res => {\n            console.log('res from getCards:', res.data);\n            let cardsArray = [];\n            for (let i = 0; i < res.data.length; i++) {\n                let currentCardGroup = [];\n                let currentCards = res.data[i]._cards;\n                currentCardGroup.push(currentCards);\n                cardsArray.push(currentCardGroup);\n            }\n            dispatch({\n                type: GET_CARDS,\n                payload: cardsArray\n            })\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            })\n        );\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport NavBar from './navigation/navigationBar.jsx';\nimport BoardHeader from './components/boardHeader.jsx';\nimport Lists from './components/Lists.jsx';\nimport { getLists, getCards } from './redux/actions/getActions.js';\nimport { deleteList, addList, editList, addCard, deleteCard, editCard } from './redux/actions/changeActions.js';\nimport store from './redux/store/index.js';\nimport Modal from './components/menuModal.jsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      cards: [],\n      editingList: false,\n      editingCard: false,\n      addingCard: false,\n      currentAddList: 0,\n      currentNewCardName: '', \n      currentEditList: 0,\n      currentNewListName: '',\n      currentEditCard: 0,\n      currentEditCardName: '',\n      currentEditCardList: 0,\n      showModal: false\n    };\n    this.onGetCards = this.onGetCards.bind(this);\n    this.onGetLists = this.onGetLists.bind(this);\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleDeleteList = this.handleDeleteList.bind(this);\n    this.handleEditList = this.handleEditList.bind(this);\n    this.handleAddCard = this.handleAddCard.bind(this);\n    this.handleDeleteCard = this.handleDeleteCard.bind(this);\n    this.handleEditCard = this.handleEditCard.bind(this);\n    this.showEditList = this.showEditList.bind(this);\n    this.showEditCard = this.showEditCard.bind(this);\n    this.showAddCard = this.showAddCard.bind(this);\n    this.handleCardChange = this.handleCardChange.bind(this);\n    this.handleListChange = this.handleListChange.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n  }\n\n  onGetCards() {\n    store.dispatch(this.props.getCards);\n  }\n\n  onGetLists() {\n    store.dispatch(this.props.getLists);\n  }\n\n  handleAddList(newListId) {\n    this.props.addList(newListId);\n  }\n\n  handleDeleteList(listId) {\n    this.props.deleteList(listId);\n  }\n\n  handleEditList(listId, newName) {\n    this.props.editList(listId, newName);\n  }\n\n  handleAddCard(listId, lastCardId, lastPosition, newCardName) {\n    this.props.addCard(listId, lastCardId, lastPosition, newCardName);\n  }\n\n  handleDeleteCard(cardId, listId) {\n    this.props.deleteCard(cardId, listId);\n  }\n\n  handleEditCard(cardId, listId, newCardTitle) {\n    this.props.editCard(cardId, listId, newCardTitle);\n  }\n\n  showEditList(listId) {\n    this.setState({\n      editingList: !this.state.editingList,\n      currentEditList: listId\n    })\n  }\n\n  showEditCard(listId, cardId) {\n    this.setState({\n      editingCard: !this.state.editingCard,\n      currentEditCardList: listId,\n      currentEditCard: cardId\n    })\n  }\n\n  showAddCard(listId) {\n    this.setState({\n      addingCard: !this.state.addingCard,\n      currentAddList: listId\n    })\n  }\n\n  handleCardChange(event) {\n    this.setState({\n      currentNewCardName: event.target.value\n    })\n  }\n\n  handleListChange(event) {\n    this.setState({\n      currentNewListName: event.target.value\n    })\n  }\n\n  handleModal() {\n    this.setState({\n      showModal: true\n    })\n  }\n\n  componentDidMount() {\n    this.onGetLists();\n    this.onGetCards();\n  }\n\n  render() {\n    const {lists, listIds, cards} = this.state;\n    \n    return (\n        <div className=\"App\">\n            <NavBar/>\n            <BoardHeader handleModal={this.handleModal}/>\n            <Lists lists={lists} handleDeleteList={this.handleDeleteList} handleAddList={this.handleAddList} handleEditList={this.handleEditList} handleAddCard={this.handleAddCard} handleDeleteCard={this.handleDeleteCard} handleEditCard={this.handleEditCard} editingList={this.state.editingList} showEditList={this.showEditList} showEditCard={this.showEditCard} editingCard={this.state.editingCard} addingCard={this.state.addingCard} showAddCard={this.showAddCard} currentAddList={this.state.currentAddList} currentNewCardName={this.state.currentNewCardName} handleCardChange={this.handleCardChange} currentEditList={this.state.currentEditList} handleListChange={this.handleListChange} currentNewListName={this.state.currentNewListName} currentEditCardList={this.state.currentEditCardList} currentEditCard={this.state.currentEditCard}/>\n            {/* <Modal showModal={this.state.showModal}/> */}\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps, { getLists, deleteList, addList, editList, getCards, addCard, deleteCard, editCard })(App);","// import axios from 'axios';\nimport axios from '../../server/axiosConfig.js';\nimport { DELETE_LIST, POST_LIST, UPDATE_LIST, POST_CARD, DELETE_CARD, UPDATE_CARD } from './index.js';\nimport { getLists, getCards } from './getActions.js';\nimport { GET_ERRORS } from './index.js';\n\nexport const deleteList = (listId) => dispatch => {\n    let data = ({\n        list_id: listId\n    })\n    axios.delete(`http://localhost:3001/api/lists/${listId}`, { params: data })\n        .then(data => {\n            dispatch({\n                type: DELETE_LIST,\n                payload: listId\n            })\n            dispatch(getLists());\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            })\n        );\n}\n\n\nexport const addList = (newListId) => dispatch => {\n    let data = ({\n        listId: newListId\n    })\n    axios.post(`http://localhost:3001/api/lists/${newListId}`, { params: data })\n        .then(data => {\n            dispatch({\n                type: POST_LIST,\n                payload: newListId\n            })\n            dispatch(getLists());\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            })\n        );\n}\n\nexport const editList = (listId, newName) => dispatch => {\n    let data = ({\n        listId: listId,\n        listTitle: newName\n    })\n\n    axios.patch(`http://localhost:3001/api/lists/${listId}`, data)\n    .then(data => {\n        dispatch({\n            type: UPDATE_LIST,\n            payload: data\n        })\n        dispatch(getLists());\n    })\n    .catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    );\n\n}\n\nexport const addCard = (listId, lastCardId, lastPosition, newCardName) => dispatch => {\n    let data = ({\n        cardId: lastCardId + 1,\n        listId: listId, \n        cardName: newCardName,\n        position: lastPosition + 1\n    })\n    console.log(data, 'line 85')\n    // axios({method: 'delete', url: `http://localhost:3001/api/lists`, data: listId})\n    axios.post(`http://localhost:3001/api/cards/${listId}`, { params: data })\n        .then(data => {\n            dispatch({\n                type: POST_CARD,\n                payload: data\n            })\n            dispatch(getCards());\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            })\n        );\n}\n\nexport const deleteCard = (cardId, listId) => dispatch => {\n    let data = ({\n        listId: listId,\n        cardId: cardId\n    })\n    console.log(data, 'line 109')\n    axios.delete(`http://localhost:3001/api/cards/${cardId}`, { params: data })\n        .then(data => {\n            console.log(data, 'deleteCard line 112');\n            dispatch({\n                type: DELETE_CARD,\n                payload: cardId\n            })\n            dispatch(getCards());\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            })\n        );\n\n}\n\nexport const editCard = (cardId, listId, newCardTitle) => dispatch => {\n    console.log(cardId, listId, newCardTitle, 'line 53');\n    let data = ({\n        cardId: cardId,\n        listId: listId,\n        cardTitle: newCardTitle\n    })\n\n    axios.patch(`http://localhost:3001/api/cards/${cardId}`, data)\n    .then(data => {\n        console.log(data, 'editCard line 137');\n        dispatch({\n            type: UPDATE_CARD,\n            payload: data\n        })\n        dispatch(getCards());\n    })\n    .catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    );\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from \"redux\";\nimport store from './redux/store/index.js';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}